# Define all the services that make up the application
services:
  # Frontend Service (Next.js App)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hr_ai_frontend
    # env_file directive to load environment variables from the specified file
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    environment:
      # This variable is set here for inter-service communication
      - NEXT_PUBLIC_API_URL=http://backend:5000/api
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - hrai-network

  # Backend Service (Flask App)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hr_ai_backend
    # env_file directive to load environment variables for the backend
    env_file:
      - ./backend/.env
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      # These variables are still defined to ensure they are set,
      # and they will be populated by the values from the .env file.
      - MONGODB_URI=mongodb://mongodb:27017/hr_ai_system
      - DB_NAME=hr_ai_system
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
    depends_on:
      - mongodb
    networks:
      - hrai-network

  # MongoDB Database Service
  mongodb:
    image: mongo:latest
    container_name: hr_ai_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - hrai-network

  # Service to initialize the database
  db-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: db_initializer
    command: >
      sh -c "
        echo 'Waiting for MongoDB to be ready...' &&
        until mongosh --host mongodb --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' &>/dev/null; do
          sleep 1;
        done &&
        echo 'MongoDB is ready. Initializing database...' &&
        python init_db.py
      "
    depends_on:
      - mongodb
    networks:
      - hrai-network

# Define the named volume for MongoDB data persistence
volumes:
  mongo-data:

# Define the network for all services to communicate
networks:
  hrai-network:
    driver: bridge
