version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hr_ai_backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      # Add your MongoDB and API keys here
      - MONGODB_URI=${MONGODB_URI:-mongodb+srv://yehara:yehara2001@hr-agent.iukkd8c.mongodb.net/?retryWrites=true&w=majority&appName=hr-agent}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-AIzaSyAgxPU_Pqffw-UPnA81BLgpo3TU0zF0K9c}
      - SECRET_KEY=${SECRET_KEY:-hr-ai-secret-key-2024}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key-2024}
    volumes:
      - ./backend:/app
    networks:
      - hr_ai_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('https://moden-hr-agent.onrender.com/api/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hr_ai_frontend
    ports:
      - "3000:3000"
    environment:
      # CRITICAL: Use the backend service name as hostname
      - NEXT_PUBLIC_API_URL=http://backend:5000/api
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - hr_ai_network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  hr_ai_network:
    driver: bridge
    name: hr_ai_network

volumes:
  node_modules:
  next_build:
